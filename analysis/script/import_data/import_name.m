clear all
close all

%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/miles/Dropbox/AbArts/ArtTask/data/180420trialdata.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/04/23 11:29:52

%% Initialize variables.
if boolean(strfind(pwd, 'sandy'))
    filename = '/Users/sandy/Dropbox/Caltech/AbArts/artTask/data/180423trialdata.csv';
else
    filename = '/Users/miles/Dropbox/AbArts/ArtTask/data/180420trialdata.csv';
end

delimiter = ',';

%% Format for each line of text:
%   column1: text (%q)
%	column2: double (%f)
%   column3: double (%f)
%	column4: text (%q)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%q%f%f%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.


%% Create output variable
trialdata = table(dataArray{1:end-1}, 'VariableNames', {'name','sequence','time','infos'});

%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;


%%

name=trialdata(:,1);
name=table2cell(name);

infos=trialdata(:,4);
infos=table2cell(infos);
infos=cellstr(infos);

l_matrix=size(infos,1)

nonempty_index=[];
for i=1:l_matrix
    x=infos{i,1};
    
    if length(char(x))>6
        nonempty_index=[nonempty_index; i];
    end
        

end

name_new=name(nonempty_index);
infos_new=infos(nonempty_index);
%%
l_matrix=length(infos_new);
task_trial=[]
for i=1:l_matrix
    x=char(infos_new{i,1});
    if  x(1:5)== '{"rt"'   
        task_trial=[task_trial;i];
    end
end

name_trial=name_new(task_trial);

infos_trial=infos_new(task_trial);
%%
%%
l_matrix=length(infos_new);
task_trial=[]
for i=1:l_matrix
    x=char(infos_new{i,1});
    if  x(1:5)== '{"rt"' 
        if ~contains(x, 'instructions') && ~contains(x, 'null') && ~contains(x, 'images/0.jpg') && ~contains(x, 'Ok, very')...
                &&  ~contains(x, 'In this part of') &&  ~contains(x, 'You are almost done') 
            task_trial=[task_trial;i];
        end
    end
end

name_trial=name_new(task_trial);  %% this contains, familiarity, rating, survey

infos_trial=infos_new(task_trial);


%% survey part
l_matrix =length(infos_trial);
survey_trial=[]
nonsurvey_trial=[];
for i=1:l_matrix
    x=char(infos_trial{i,1});
    if  contains(x, '"Q0')
        
        survey_trial=[survey_trial;i];
        
    else
        
        nonsurvey_trial=[nonsurvey_trial;i];
        
    end
end

name_survey=name_trial(survey_trial);  %% this contains survey

infos_survey=infos_trial(survey_trial);


name_maintask=name_trial(nonsurvey_trial);  %% this contains main task

infos_maintask=infos_trial(nonsurvey_trial);

%%


infos_maintask= strrep(infos_maintask, '"', '');


RTs=[];
Responses=[];
l_matrix=length(infos_maintask);

button_order=[];

image_path=[];

trial_type=[];
for i=1:l_matrix
    x=infos_maintask{i,1};
    
    q=extractBetween(x,":","trial_type");
    y = sscanf(char(q),'%f');
    
    RTs=[RTs;y];
    
    q=extractBetween(x,"pressed","stimulus");
    y = sscanf(char(q),'%f');
    
    if contains(q, '0')
        Responses=[Responses;0];
    elseif contains(q, '1')
        Responses=[Responses;1];
    elseif contains(q, '2')
        Responses=[Responses;2]; 
    elseif contains(q, '3')
        Responses=[Responses;3];  
    end
    
    if contains(char(x),"[I know., I don't know.]")
        button_order{i,1}='YN';
        trial_type{i,1}='knowledge';
    elseif contains(char(x),"[''I don't know.'', ''I know.'']")
        button_order{i,1}='NY';
        trial_type{i,1}='knowledge';
    else
        button_order{i,1}='NaN';
        trial_type{i,1}='rating';
    end
    
    q=extractBetween(x,"images",",");
    
    image_path{i,1}=q;
        
   
end

maintask_table=table(name_maintask,trial_type,Responses,button_order,RTs,image_path);


